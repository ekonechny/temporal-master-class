syntax="proto3";

package temporal;

import "google/protobuf/empty.proto";
import "temporal/v1/temporal.proto";
import "common.proto";

option go_package = "temporal-master-class/internal/generated/temporal";

service Customer {
  option (temporal.v1.service) = {
    task_queue: "general"
  };

  rpc CustomerFlow(CustomerFlowRequest) returns (google.protobuf.Empty) {
    option (temporal.v1.workflow) = {
      id_reuse_policy: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE
      id: 'customers/${! customerId.or(id.or(uuid_v4())) }'
      // profile
      query: { ref: "GetProfile" }
      update: { ref: "UpdateProfile" }
      signal: { ref: "DeleteProfile" }

      // address
      signal: { ref: "SetAddress" }

      // cart
      query: { ref: "GetCart" }
      update: { ref: "UpdateCart" }
      signal: { ref: "DeleteCart" }

      // order
      update: { ref: "Checkout" }
    };
  }

  // Profile
  rpc GetProfile(google.protobuf.Empty) returns (Profile) {
    option (temporal.v1.query) = {};
  }

  rpc UpdateProfile(UpdateProfileRequest) returns (Profile) {
    option (temporal.v1.update) = {};
  }

  rpc DeleteProfile(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (temporal.v1.signal) = {};
  }

  // Address
  rpc SetAddress(SetAddressRequest) returns (google.protobuf.Empty) {
    option (temporal.v1.signal) = {};
  }

  // Cart
  rpc GetCart(google.protobuf.Empty) returns (Cart) {
    option (temporal.v1.query) = {};
  }

  rpc UpdateCart(UpdateCartRequest) returns (Cart) {
    option (temporal.v1.update) = {};
  }

  rpc DeleteCart(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (temporal.v1.signal) = {};
  }

  rpc Checkout(CheckoutRequest) returns (Order) {
    option (temporal.v1.update) = {};
  }

  rpc AssortmentGetProducts(AssortmentGetProductsRequest) returns (AssortmentGetProductsResponse) {
    option (temporal.v1.activity) = {
      start_to_close_timeout: { seconds: 4 }
      retry_policy: {
        max_attempts: 3
      }
    };
  }
}

message CustomerFlowRequest {
  string name = 1;
  string phone = 2;
};

message UpdateProfileRequest {
  string name = 1;
}

message SetAddressRequest {
  Address address = 1;
}

message UpdateCartProductRequest {
  string id = 1;
  int32 qty = 2;
}

message UpdateCartRequest {
  repeated UpdateCartProductRequest products = 1;
}

message CheckoutRequest {
    PaymentType paymentType = 1;
}

message AssortmentGetProductsRequest {
  repeated string ids = 1;
}

message AssortmentProduct {
  string id = 1;
  string name = 2;
  int32 price = 3;
  string inn = 4;
  int32 stocks = 5;
}

message AssortmentGetProductsResponse {
  repeated AssortmentProduct products = 1;
}

message AssortmentReserveProductRequest {
  string id = 1;
  int32 qty = 2;
}

message AssortmentReserveRequest {
  repeated AssortmentReserveProductRequest products = 1;
}
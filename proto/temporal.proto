syntax="proto3";

package order;

import "google/protobuf/empty.proto";
import "temporal/v1/temporal.proto";

option go_package = "temporal-master-class/generated/temporal";

service order {
  option (temporal.v1.service) = {
    task_queue: "order-v1"
  };

  rpc CreateOrder(CreateOrderRequest) returns (google.protobuf.Empty) {
    option (temporal.v1.workflow) = {
      id_reuse_policy: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE
      id: 'orders/${! id }'
      query: { ref: "Read" }
      update: { ref: "Update" }
      signal: { ref: "Delete" }
    };
  }

  rpc Read(google.protobuf.Empty) returns (Order) {
    option (temporal.v1.query) = {};
  }

  rpc Update(UpdateOrderRequest) returns (Order) {
    option (temporal.v1.update) = {};
  }

  rpc Delete(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (temporal.v1.signal) = {};
  }
}

message CreateOrderRequest {
  string id = 1;
  string customerId = 2;
  string address = 3;
  repeated Product products = 4;
}

message Product {
  string id = 1;
  string name = 2;
  int32 qty = 3;
  int32 price = 4;
}

message UpdateOrderRequest {
  string address = 1;
  repeated Product products = 2;
}

message Order {
  string id = 1;
  string customerId = 2;
  string address = 3;
  repeated Product products = 4;
  int32 total = 5;
}
